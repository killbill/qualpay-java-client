/*
 * Qualpay Platform API
 * This document describes the Qualpay Platform API.
 *
 * OpenAPI spec version: 1.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import qpPlatform.ApiException;
import io.swagger.client.model.AusHoldRequest;
import io.swagger.client.model.AusReleaseRequest;
import io.swagger.client.model.AusRequest;
import io.swagger.client.model.AusRequestResponse;
import io.swagger.client.model.AusUpdatedResponse;
import java.io.File;
import io.swagger.client.model.QPApiResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountUpdaterApi
 */
@Ignore
public class AccountUpdaterApiTest {

    private final AccountUpdaterApi api = new AccountUpdaterApi();

    
    /**
     * Submit AUS CSV File Request
     *
     * Submit an Account Updater request using full card number and expiration date using csv file
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAusFileRequestTest() throws ApiException {
        File file = null;
        AusRequestResponse response = api.addAusFileRequest(file);

        // TODO: test validations
    }
    
    /**
     * Submit AUS Request
     *
     * Submit an Account Updater request using full card number and expiration date.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAusJsonRequestTest() throws ApiException {
        AusRequest body = null;
        AusRequestResponse response = api.addAusJsonRequest(body);

        // TODO: test validations
    }
    
    /**
     * Get AUS Response
     *
     * Get updated AUS response using requestId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAusResponseTest() throws ApiException {
        Long requestId = null;
        AusUpdatedResponse response = api.getAusResponse(requestId);

        // TODO: test validations
    }
    
    /**
     * Put on Account Updater Harvest Hold
     *
     * Put a card id or all payment cards belonging to a customer on Account updater harvest hold. Account updater service cannot process ACH payments or non U.S. issued cards. Account updater service cannot process ACH payments or foreign issued cards, hence this request is applicable to only U.S. issued credit cards. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putOnAusHoldTest() throws ApiException {
        AusHoldRequest body = null;
        QPApiResponse response = api.putOnAusHold(body);

        // TODO: test validations
    }
    
    /**
     * Release from Account Updater Harvest Hold
     *
     * Release a card id or all payment methods belonging to a customer from Account updater harvest hold. Account updater service cannot process ACH payments or non U.S. issued cards, hence this request is applicable to only U.S. issued credit cards.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void releaseFromAusHoldTest() throws ApiException {
        AusReleaseRequest body = null;
        QPApiResponse response = api.releaseFromAusHold(body);

        // TODO: test validations
    }
    
}

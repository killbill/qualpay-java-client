/*
 * Qualpay Platform API
 * This document describes the Qualpay Platform API.
 *
 * OpenAPI spec version: 1.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * StatementSettlementData
 */

public class StatementSettlementData {
  @SerializedName("rec_id_linked")
  private Long recIdLinked = null;

  @SerializedName("merchant_id")
  private Long merchantId = null;

  @SerializedName("billing_month")
  private String billingMonth = null;

  @SerializedName("batch_date")
  private OffsetDateTime batchDate = null;

  @SerializedName("reference_number")
  private Long referenceNumber = null;

  @SerializedName("cnt_purch")
  private Double cntPurch = null;

  @SerializedName("amt_purch")
  private Double amtPurch = null;

  @SerializedName("amt_return")
  private Double amtReturn = null;

  @SerializedName("discount_paid")
  private Double discountPaid = null;

  @SerializedName("amt_net")
  private Double amtNet = null;

  @SerializedName("source_id")
  private Long sourceId = null;

  public StatementSettlementData recIdLinked(Long recIdLinked) {
    this.recIdLinked = recIdLinked;
    return this;
  }

   /**
   * For INTERNAL USE ONLY.
   * @return recIdLinked
  **/
  @ApiModelProperty(example = "0", value = "For INTERNAL USE ONLY.")
  public Long getRecIdLinked() {
    return recIdLinked;
  }

  public void setRecIdLinked(Long recIdLinked) {
    this.recIdLinked = recIdLinked;
  }

  public StatementSettlementData merchantId(Long merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Unique ID assigned by Qualpay to a merchant.
   * @return merchantId
  **/
  @ApiModelProperty(example = "212000000001", value = "<strong>Format: </strong>Variable length, up to 16 N<br><strong>Description: </strong>Unique ID assigned by Qualpay to a merchant.")
  public Long getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(Long merchantId) {
    this.merchantId = merchantId;
  }

  public StatementSettlementData billingMonth(String billingMonth) {
    this.billingMonth = billingMonth;
    return this;
  }

   /**
   * Billing month of the statement in YYYY-MM-DD.
   * @return billingMonth
  **/
  @ApiModelProperty(example = "2019-03-01", value = "Billing month of the statement in YYYY-MM-DD.")
  public String getBillingMonth() {
    return billingMonth;
  }

  public void setBillingMonth(String billingMonth) {
    this.billingMonth = billingMonth;
  }

  public StatementSettlementData batchDate(OffsetDateTime batchDate) {
    this.batchDate = batchDate;
    return this;
  }

   /**
   * The date displayed is when a batch settled. Different to the batch date, the settled date displays when the batch was processed by the card brands in YYYY-MM-DD.
   * @return batchDate
  **/
  @ApiModelProperty(example = "2019-03-01", value = "The date displayed is when a batch settled. Different to the batch date, the settled date displays when the batch was processed by the card brands in YYYY-MM-DD.")
  public OffsetDateTime getBatchDate() {
    return batchDate;
  }

  public void setBatchDate(OffsetDateTime batchDate) {
    this.batchDate = batchDate;
  }

  public StatementSettlementData referenceNumber(Long referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * An 11-digit number generated by the product initiating the transaction. The number is available when the transaction is settled and is a unique number that both the acquirer and the issuer can use to identify a transaction. The reference is used as the deposit reference number.
   * @return referenceNumber
  **/
  @ApiModelProperty(example = "12345678901234567890123", value = "An 11-digit number generated by the product initiating the transaction. The number is available when the transaction is settled and is a unique number that both the acquirer and the issuer can use to identify a transaction. The reference is used as the deposit reference number.")
  public Long getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(Long referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public StatementSettlementData cntPurch(Double cntPurch) {
    this.cntPurch = cntPurch;
    return this;
  }

   /**
   * The total funded count of transactions in a settled batch.
   * @return cntPurch
  **/
  @ApiModelProperty(example = "10.0", value = "The total funded count of transactions in a settled batch.")
  public Double getCntPurch() {
    return cntPurch;
  }

  public void setCntPurch(Double cntPurch) {
    this.cntPurch = cntPurch;
  }

  public StatementSettlementData amtPurch(Double amtPurch) {
    this.amtPurch = amtPurch;
    return this;
  }

   /**
   * The total funded value of each transaction in a settled batch.
   * @return amtPurch
  **/
  @ApiModelProperty(example = "10.1", value = "The total funded value of each transaction in a settled batch.")
  public Double getAmtPurch() {
    return amtPurch;
  }

  public void setAmtPurch(Double amtPurch) {
    this.amtPurch = amtPurch;
  }

  public StatementSettlementData amtReturn(Double amtReturn) {
    this.amtReturn = amtReturn;
    return this;
  }

   /**
   * The total amount of refund or credit transactions in a batch.
   * @return amtReturn
  **/
  @ApiModelProperty(example = "10.1", value = "The total amount of refund or credit transactions in a batch.")
  public Double getAmtReturn() {
    return amtReturn;
  }

  public void setAmtReturn(Double amtReturn) {
    this.amtReturn = amtReturn;
  }

  public StatementSettlementData discountPaid(Double discountPaid) {
    this.discountPaid = discountPaid;
    return this;
  }

   /**
   * The amount deducted from a settled batch prior to merchant funding. These fees apply to accounts set up for net settlement and are the discount percentage applied to each payment transaction and will vary based on the type of payment and the type of the transaction.
   * @return discountPaid
  **/
  @ApiModelProperty(example = "10.1", value = "The amount deducted from a settled batch prior to merchant funding. These fees apply to accounts set up for net settlement and are the discount percentage applied to each payment transaction and will vary based on the type of payment and the type of the transaction.")
  public Double getDiscountPaid() {
    return discountPaid;
  }

  public void setDiscountPaid(Double discountPaid) {
    this.discountPaid = discountPaid;
  }

  public StatementSettlementData amtNet(Double amtNet) {
    this.amtNet = amtNet;
    return this;
  }

   /**
   * The net amount funded to a deposit account.
   * @return amtNet
  **/
  @ApiModelProperty(example = "10.1", value = "The net amount funded to a deposit account.")
  public Double getAmtNet() {
    return amtNet;
  }

  public void setAmtNet(Double amtNet) {
    this.amtNet = amtNet;
  }

  public StatementSettlementData sourceId(Long sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * For INTERNAL USE ONLY.
   * @return sourceId
  **/
  @ApiModelProperty(example = "0", value = "For INTERNAL USE ONLY.")
  public Long getSourceId() {
    return sourceId;
  }

  public void setSourceId(Long sourceId) {
    this.sourceId = sourceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatementSettlementData statementSettlementData = (StatementSettlementData) o;
    return Objects.equals(this.recIdLinked, statementSettlementData.recIdLinked) &&
        Objects.equals(this.merchantId, statementSettlementData.merchantId) &&
        Objects.equals(this.billingMonth, statementSettlementData.billingMonth) &&
        Objects.equals(this.batchDate, statementSettlementData.batchDate) &&
        Objects.equals(this.referenceNumber, statementSettlementData.referenceNumber) &&
        Objects.equals(this.cntPurch, statementSettlementData.cntPurch) &&
        Objects.equals(this.amtPurch, statementSettlementData.amtPurch) &&
        Objects.equals(this.amtReturn, statementSettlementData.amtReturn) &&
        Objects.equals(this.discountPaid, statementSettlementData.discountPaid) &&
        Objects.equals(this.amtNet, statementSettlementData.amtNet) &&
        Objects.equals(this.sourceId, statementSettlementData.sourceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recIdLinked, merchantId, billingMonth, batchDate, referenceNumber, cntPurch, amtPurch, amtReturn, discountPaid, amtNet, sourceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatementSettlementData {\n");
    
    sb.append("    recIdLinked: ").append(toIndentedString(recIdLinked)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    billingMonth: ").append(toIndentedString(billingMonth)).append("\n");
    sb.append("    batchDate: ").append(toIndentedString(batchDate)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    cntPurch: ").append(toIndentedString(cntPurch)).append("\n");
    sb.append("    amtPurch: ").append(toIndentedString(amtPurch)).append("\n");
    sb.append("    amtReturn: ").append(toIndentedString(amtReturn)).append("\n");
    sb.append("    discountPaid: ").append(toIndentedString(discountPaid)).append("\n");
    sb.append("    amtNet: ").append(toIndentedString(amtNet)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Qualpay Platform API
 * This document describes the Qualpay Platform API.
 *
 * OpenAPI spec version: 1.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EmbeddedKey
 */

public class EmbeddedKey {
  @SerializedName("transient_key")
  private String transientKey = null;

  @SerializedName("merchant_id")
  private Long merchantId = null;

  @SerializedName("db_timestamp")
  private String dbTimestamp = null;

  @SerializedName("expiry_time")
  private String expiryTime = null;

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 32 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;A single use token used for loading embedded fields. The key will be invalidated   when a card is successfully verified. If unused, the token will expire in 30 minutes. 
   * @return transientKey
  **/
  @ApiModelProperty(example = "a393941797c811e6825102a019999999", value = "<strong>Format: </strong>Fixed length, 32 AN<br><strong>Description: </strong>A single use token used for loading embedded fields. The key will be invalidated   when a card is successfully verified. If unused, the token will expire in 30 minutes. ")
  public String getTransientKey() {
    return transientKey;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Unique ID assigned by Qualpay to a merchant.
   * @return merchantId
  **/
  @ApiModelProperty(example = "212000000001", required = true, value = "<strong>Format: </strong>Variable length, up to 16 AN<br><strong>Description: </strong>Unique ID assigned by Qualpay to a merchant.")
  public Long getMerchantId() {
    return merchantId;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;This field contains the transient key creation timestamp. 
   * @return dbTimestamp
  **/
  @ApiModelProperty(example = "2016-02-21T12:57:47.000-0700", value = "<strong>Format: </strong>Variable length AN<br><strong>Description: </strong>This field contains the transient key creation timestamp. ")
  public String getDbTimestamp() {
    return dbTimestamp;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;This field contains the timestamp when the transient key will expire.
   * @return expiryTime
  **/
  @ApiModelProperty(example = "2016-02-21T14:37:47.000-0700", value = "<strong>Format: </strong>Variable length AN<br><strong>Description: </strong>This field contains the timestamp when the transient key will expire.")
  public String getExpiryTime() {
    return expiryTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmbeddedKey embeddedKey = (EmbeddedKey) o;
    return Objects.equals(this.transientKey, embeddedKey.transientKey) &&
        Objects.equals(this.merchantId, embeddedKey.merchantId) &&
        Objects.equals(this.dbTimestamp, embeddedKey.dbTimestamp) &&
        Objects.equals(this.expiryTime, embeddedKey.expiryTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transientKey, merchantId, dbTimestamp, expiryTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmbeddedKey {\n");
    
    sb.append("    transientKey: ").append(toIndentedString(transientKey)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    dbTimestamp: ").append(toIndentedString(dbTimestamp)).append("\n");
    sb.append("    expiryTime: ").append(toIndentedString(expiryTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


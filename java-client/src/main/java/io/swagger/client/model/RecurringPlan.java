/*
 * Qualpay Platform API
 * This document describes the Qualpay Platform API.
 *
 * OpenAPI spec version: 1.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RecurringPlan
 */

public class RecurringPlan {
  @SerializedName("merchant_id")
  private Long merchantId = null;

  @SerializedName("plan_id")
  private Long planId = null;

  @SerializedName("plan_code")
  private String planCode = null;

  @SerializedName("plan_name")
  private String planName = null;

  @SerializedName("plan_desc")
  private String planDesc = null;

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length 1 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt; The billing frequency. Possible values are: &lt;ul&gt;      &lt;li&gt;0 - Weekly&lt;/li&gt;      &lt;li&gt;1 - Bi-weekly&lt;/li&gt;      &lt;li&gt;3 - Monthly&lt;/li&gt;      &lt;li&gt;4 - Quarterly&lt;/li&gt;      &lt;li&gt;5 - Bi-annually&lt;/li&gt;      &lt;li&gt;6 - Annually&lt;/li&gt;      &lt;li&gt;7 - Daily&lt;/li&gt;   &lt;/ul&gt;
   */
  @JsonAdapter(PlanFrequencyEnum.Adapter.class)
  public enum PlanFrequencyEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7);

    private Integer value;

    PlanFrequencyEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlanFrequencyEnum fromValue(String text) {
      for (PlanFrequencyEnum b : PlanFrequencyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PlanFrequencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlanFrequencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlanFrequencyEnum read(final JsonReader jsonReader) throws IOException {
        Integer value = jsonReader.nextInt();
        return PlanFrequencyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("plan_frequency")
  private PlanFrequencyEnum planFrequency = null;

  @SerializedName("interval")
  private Integer interval = null;

  @SerializedName("plan_duration")
  private Integer planDuration = null;

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length 1 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Status of the plan. &lt;ul&gt;&lt;li&gt;E - Active&lt;/li&gt;&lt;li&gt;A - Archived&lt;/li&gt;&lt;li&gt;D - Deleted&lt;/li&gt;&lt;/ul&gt;
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    E("E"),
    
    A("A"),
    
    D("D");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("trial_duration")
  private Integer trialDuration = null;

  @SerializedName("amt_trial")
  private Double amtTrial = null;

  @SerializedName("amt_setup")
  private Double amtSetup = null;

  @SerializedName("amt_tran")
  private Double amtTran = null;

  @SerializedName("tran_currency")
  private String tranCurrency = null;

  @SerializedName("profile_id")
  private String profileId = null;

  @SerializedName("bill_specific_day")
  private Boolean billSpecificDay = null;

  @SerializedName("day_of_week")
  private Integer dayOfWeek = null;

  @SerializedName("day_of_month")
  private Integer dayOfMonth = null;

  @SerializedName("month")
  private Integer month = null;

  @SerializedName("prorate_first_pmt")
  private Boolean prorateFirstPmt = null;

  @SerializedName("amt_prorate")
  private Double amtProrate = null;

  @SerializedName("db_timestamp")
  private String dbTimestamp = null;

  @SerializedName("mod_timestamp")
  private String modTimestamp = null;

  public RecurringPlan merchantId(Long merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Unique ID assigned by Qualpay to a merchant.
   * @return merchantId
  **/
  @ApiModelProperty(example = "210000000289", value = "<strong>Format: </strong>Variable length, up to 16 AN<br><strong>Description: </strong>Unique ID assigned by Qualpay to a merchant.")
  public Long getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(Long merchantId) {
    this.merchantId = merchantId;
  }

  public RecurringPlan planId(Long planId) {
    this.planId = planId;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Unique ID generated by Qualpay for a Plan.
   * @return planId
  **/
  @ApiModelProperty(example = "1234", value = "<strong>Format: </strong>Variable length, up to 10 N<br><strong>Description: </strong>Unique ID generated by Qualpay for a Plan.")
  public Long getPlanId() {
    return planId;
  }

  public void setPlanId(Long planId) {
    this.planId = planId;
  }

  public RecurringPlan planCode(String planCode) {
    this.planCode = planCode;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;A unique alphanumeric code provided by the merchant to identify the plan.
   * @return planCode
  **/
  @ApiModelProperty(example = "1234", value = "<strong>Format: </strong>Variable length, up to 16 AN<br><strong>Description: </strong>A unique alphanumeric code provided by the merchant to identify the plan.")
  public String getPlanCode() {
    return planCode;
  }

  public void setPlanCode(String planCode) {
    this.planCode = planCode;
  }

  public RecurringPlan planName(String planName) {
    this.planName = planName;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 64 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;A unique name assigned to the plan. 
   * @return planName
  **/
  @ApiModelProperty(example = "Qualpay Plan", value = "<strong>Format: </strong>Variable length, up to 64 AN<br><strong>Description: </strong>A unique name assigned to the plan. ")
  public String getPlanName() {
    return planName;
  }

  public void setPlanName(String planName) {
    this.planName = planName;
  }

  public RecurringPlan planDesc(String planDesc) {
    this.planDesc = planDesc;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;A short description of the plan.
   * @return planDesc
  **/
  @ApiModelProperty(example = "ABC Monthly Billing Plan", value = "<strong>Format: </strong>Variable length AN<br><strong>Description: </strong>A short description of the plan.")
  public String getPlanDesc() {
    return planDesc;
  }

  public void setPlanDesc(String planDesc) {
    this.planDesc = planDesc;
  }

  public RecurringPlan planFrequency(PlanFrequencyEnum planFrequency) {
    this.planFrequency = planFrequency;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length 1 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt; The billing frequency. Possible values are: &lt;ul&gt;      &lt;li&gt;0 - Weekly&lt;/li&gt;      &lt;li&gt;1 - Bi-weekly&lt;/li&gt;      &lt;li&gt;3 - Monthly&lt;/li&gt;      &lt;li&gt;4 - Quarterly&lt;/li&gt;      &lt;li&gt;5 - Bi-annually&lt;/li&gt;      &lt;li&gt;6 - Annually&lt;/li&gt;      &lt;li&gt;7 - Daily&lt;/li&gt;   &lt;/ul&gt;
   * @return planFrequency
  **/
  @ApiModelProperty(example = "0", value = "<strong>Format: </strong>Fixed length 1 N<br><strong>Description: </strong> The billing frequency. Possible values are: <ul>      <li>0 - Weekly</li>      <li>1 - Bi-weekly</li>      <li>3 - Monthly</li>      <li>4 - Quarterly</li>      <li>5 - Bi-annually</li>      <li>6 - Annually</li>      <li>7 - Daily</li>   </ul>")
  public PlanFrequencyEnum getPlanFrequency() {
    return planFrequency;
  }

  public void setPlanFrequency(PlanFrequencyEnum planFrequency) {
    this.planFrequency = planFrequency;
  }

  public RecurringPlan interval(Integer interval) {
    this.interval = interval;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Number of months or weeks in a subscription cycle. For example if plan_frequency is 3 (Monthly) and interval is 2, a customer using this plan will be billed every 2 months till the subscription is complete or cancelled. Applicable only for monthly or weekly plan_frequency. &lt;br&gt;&lt;strong&gt;Default: &lt;/strong&gt;1
   * @return interval
  **/
  @ApiModelProperty(example = "3", value = "<strong>Format: </strong>Variable length, up to 2 N<br><strong>Description: </strong>Number of months or weeks in a subscription cycle. For example if plan_frequency is 3 (Monthly) and interval is 2, a customer using this plan will be billed every 2 months till the subscription is complete or cancelled. Applicable only for monthly or weekly plan_frequency. <br><strong>Default: </strong>1")
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(Integer interval) {
    this.interval = interval;
  }

  public RecurringPlan planDuration(Integer planDuration) {
    this.planDuration = planDuration;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 4 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt; Number of billing cycles in the recurring transaction, -1 indicates bill until cancelled. For example if plan_frequency is 3 (Monthly) and plan_duration is 6, the customer will be billed every month for 6 months.
   * @return planDuration
  **/
  @ApiModelProperty(example = "10", value = "<strong>Format: </strong>Variable length, up to 4 N<br><strong>Description: </strong> Number of billing cycles in the recurring transaction, -1 indicates bill until cancelled. For example if plan_frequency is 3 (Monthly) and plan_duration is 6, the customer will be billed every month for 6 months.")
  public Integer getPlanDuration() {
    return planDuration;
  }

  public void setPlanDuration(Integer planDuration) {
    this.planDuration = planDuration;
  }

  public RecurringPlan status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length 1 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Status of the plan. &lt;ul&gt;&lt;li&gt;E - Active&lt;/li&gt;&lt;li&gt;A - Archived&lt;/li&gt;&lt;li&gt;D - Deleted&lt;/li&gt;&lt;/ul&gt;
   * @return status
  **/
  @ApiModelProperty(example = "E", value = "<strong>Format: </strong>Fixed length 1 AN<br><strong>Description: </strong>Status of the plan. <ul><li>E - Active</li><li>A - Archived</li><li>D - Deleted</li></ul>")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public RecurringPlan trialDuration(Integer trialDuration) {
    this.trialDuration = trialDuration;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Number of billing cycles in a trial period.
   * @return trialDuration
  **/
  @ApiModelProperty(example = "1", value = "<strong>Format: </strong>Variable length, up to 2 N<br><strong>Description: </strong>Number of billing cycles in a trial period.")
  public Integer getTrialDuration() {
    return trialDuration;
  }

  public void setTrialDuration(Integer trialDuration) {
    this.trialDuration = trialDuration;
  }

  public RecurringPlan amtTrial(Double amtTrial) {
    this.amtTrial = amtTrial;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12,2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Amount to be billed during the trial period.
   * @return amtTrial
  **/
  @ApiModelProperty(example = "9.99", value = "<strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>Amount to be billed during the trial period.")
  public Double getAmtTrial() {
    return amtTrial;
  }

  public void setAmtTrial(Double amtTrial) {
    this.amtTrial = amtTrial;
  }

  public RecurringPlan amtSetup(Double amtSetup) {
    this.amtSetup = amtSetup;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12,2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;One-time fee amount.
   * @return amtSetup
  **/
  @ApiModelProperty(example = "50.0", value = "<strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>One-time fee amount.")
  public Double getAmtSetup() {
    return amtSetup;
  }

  public void setAmtSetup(Double amtSetup) {
    this.amtSetup = amtSetup;
  }

  public RecurringPlan amtTran(Double amtTran) {
    this.amtTran = amtTran;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12,2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Plan transaction amount. Amount that will be billed each cycle. 
   * @return amtTran
  **/
  @ApiModelProperty(example = "19.99", value = "<strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>Plan transaction amount. Amount that will be billed each cycle. ")
  public Double getAmtTran() {
    return amtTran;
  }

  public void setAmtTran(Double amtTran) {
    this.amtTran = amtTran;
  }

  public RecurringPlan tranCurrency(String tranCurrency) {
    this.tranCurrency = tranCurrency;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 3 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Numeric Currency Code. Refer to &lt;a href&#x3D;\&quot;/developer/api/reference#country-codes\&quot;target&#x3D;\&quot;_blank\&quot;&gt;Country Codes&lt;/a&gt; for a list of currency codes.&lt;br&gt;&lt;strong&gt;Default: &lt;/strong&gt;840
   * @return tranCurrency
  **/
  @ApiModelProperty(example = "840", value = "<strong>Format: </strong>Fixed length, 3 AN<br><strong>Description: </strong>Numeric Currency Code. Refer to <a href=\"/developer/api/reference#country-codes\"target=\"_blank\">Country Codes</a> for a list of currency codes.<br><strong>Default: </strong>840")
  public String getTranCurrency() {
    return tranCurrency;
  }

  public void setTranCurrency(String tranCurrency) {
    this.tranCurrency = tranCurrency;
  }

  public RecurringPlan profileId(String profileId) {
    this.profileId = profileId;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 20 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Payment gateway profile id that will be used for subscriptions that use this plan. 
   * @return profileId
  **/
  @ApiModelProperty(example = "21200000000100000840", value = "<strong>Format: </strong>Fixed length, 20 N<br><strong>Description: </strong>Payment gateway profile id that will be used for subscriptions that use this plan. ")
  public String getProfileId() {
    return profileId;
  }

  public void setProfileId(String profileId) {
    this.profileId = profileId;
  }

  public RecurringPlan billSpecificDay(Boolean billSpecificDay) {
    this.billSpecificDay = billSpecificDay;
    return this;
  }

   /**
   * &lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;If set to true, the customer will be billed on a specific start date.&lt;br&gt;&lt;strong&gt;Default: &lt;/strong&gt;false
   * @return billSpecificDay
  **/
  @ApiModelProperty(example = "true", value = "<br><strong>Description: </strong>If set to true, the customer will be billed on a specific start date.<br><strong>Default: </strong>false")
  public Boolean isBillSpecificDay() {
    return billSpecificDay;
  }

  public void setBillSpecificDay(Boolean billSpecificDay) {
    this.billSpecificDay = billSpecificDay;
  }

  public RecurringPlan dayOfWeek(Integer dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 1 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;This field represents the day of the week on which the system will be billed for weekly or biweekly plans.&lt;ul&gt;&lt;li&gt;1 - Sunday&lt;/li&gt;&lt;li&gt;2 - Monday&lt;/li&gt;&lt;li&gt;3 - Tuesday&lt;/li&gt;&lt;li&gt;4 - Wednesday&lt;/li&gt;&lt;li&gt;5 - Thursday&lt;/li&gt;&lt;li&gt;6 - Friday&lt;/li&gt;&lt;li&gt;7 - Saturday&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;strong&gt;Conditional Requirement: &lt;/strong&gt;Applicable only when billing is on specific day, i.e., bill_specific_day flag is set to true.
   * @return dayOfWeek
  **/
  @ApiModelProperty(example = "1", value = "<strong>Format: </strong>Fixed length, 1 N<br><strong>Description: </strong>This field represents the day of the week on which the system will be billed for weekly or biweekly plans.<ul><li>1 - Sunday</li><li>2 - Monday</li><li>3 - Tuesday</li><li>4 - Wednesday</li><li>5 - Thursday</li><li>6 - Friday</li><li>7 - Saturday</li></ul><br><strong>Conditional Requirement: </strong>Applicable only when billing is on specific day, i.e., bill_specific_day flag is set to true.")
  public Integer getDayOfWeek() {
    return dayOfWeek;
  }

  public void setDayOfWeek(Integer dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
  }

  public RecurringPlan dayOfMonth(Integer dayOfMonth) {
    this.dayOfMonth = dayOfMonth;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Day of the month on which the system will be billed for month or year based plans. Use 1-31 to represent the day of month when the customerwill be billed or 32 if billing should be on the last day of month. &lt;br&gt;&lt;strong&gt;Conditional Requirement: &lt;/strong&gt;Applicable only when billing is on specific day, i.e., bill_specific_day flag is set to true.
   * @return dayOfMonth
  **/
  @ApiModelProperty(example = "1", value = "<strong>Format: </strong>Variable length, up to 2 N<br><strong>Description: </strong>Day of the month on which the system will be billed for month or year based plans. Use 1-31 to represent the day of month when the customerwill be billed or 32 if billing should be on the last day of month. <br><strong>Conditional Requirement: </strong>Applicable only when billing is on specific day, i.e., bill_specific_day flag is set to true.")
  public Integer getDayOfMonth() {
    return dayOfMonth;
  }

  public void setDayOfMonth(Integer dayOfMonth) {
    this.dayOfMonth = dayOfMonth;
  }

  public RecurringPlan month(Integer month) {
    this.month = month;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Month on which the system will be billed for month or year based plans. Possible values are:&lt;ul&gt;&lt;li&gt;1 - January&lt;/li&gt;&lt;li&gt;2 - February&lt;/li&gt;&lt;li&gt;3 - March&lt;/li&gt;&lt;li&gt;4 - April&lt;/li&gt;&lt;li&gt;5 - May&lt;/li&gt;&lt;li&gt;6 - June&lt;/li&gt;&lt;li&gt;7 - July&lt;/li&gt;&lt;li&gt;8 - August&lt;/li&gt;&lt;li&gt;9 - September&lt;/li&gt;&lt;li&gt;10 - October&lt;/li&gt;&lt;li&gt;11 - November&lt;/li&gt;&lt;li&gt;12 - December&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;strong&gt;Conditional Requirement: &lt;/strong&gt;Applicable only when billing is on specific day , i.e., bill_specific_day flag is set to true.
   * @return month
  **/
  @ApiModelProperty(example = "0", value = "<strong>Format: </strong>Variable length, up to 2 N<br><strong>Description: </strong>Month on which the system will be billed for month or year based plans. Possible values are:<ul><li>1 - January</li><li>2 - February</li><li>3 - March</li><li>4 - April</li><li>5 - May</li><li>6 - June</li><li>7 - July</li><li>8 - August</li><li>9 - September</li><li>10 - October</li><li>11 - November</li><li>12 - December</li></ul><br><strong>Conditional Requirement: </strong>Applicable only when billing is on specific day , i.e., bill_specific_day flag is set to true.")
  public Integer getMonth() {
    return month;
  }

  public void setMonth(Integer month) {
    this.month = month;
  }

  public RecurringPlan prorateFirstPmt(Boolean prorateFirstPmt) {
    this.prorateFirstPmt = prorateFirstPmt;
    return this;
  }

   /**
   * &lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Set this flag to true if the first payment should be prorated. &lt;br&gt;&lt;strong&gt;Conditional Requirement: &lt;/strong&gt;Applicable only when billing is on specific day , i.e., bill_specific_day flag is set to true.
   * @return prorateFirstPmt
  **/
  @ApiModelProperty(example = "true", value = "<br><strong>Description: </strong>Set this flag to true if the first payment should be prorated. <br><strong>Conditional Requirement: </strong>Applicable only when billing is on specific day , i.e., bill_specific_day flag is set to true.")
  public Boolean isProrateFirstPmt() {
    return prorateFirstPmt;
  }

  public void setProrateFirstPmt(Boolean prorateFirstPmt) {
    this.prorateFirstPmt = prorateFirstPmt;
  }

  public RecurringPlan amtProrate(Double amtProrate) {
    this.amtProrate = amtProrate;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12,2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Fixed prorate amount for first payment. If set to zero or undefined, the system will calculate the prorate amount based on the number of days remaining in the first cycle. &lt;br&gt;&lt;strong&gt;Conditional Requirement: &lt;/strong&gt;This field is applicable only if prorate_first_pmt is set to true. 
   * @return amtProrate
  **/
  @ApiModelProperty(example = "10.0", value = "<strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>Fixed prorate amount for first payment. If set to zero or undefined, the system will calculate the prorate amount based on the number of days remaining in the first cycle. <br><strong>Conditional Requirement: </strong>This field is applicable only if prorate_first_pmt is set to true. ")
  public Double getAmtProrate() {
    return amtProrate;
  }

  public void setAmtProrate(Double amtProrate) {
    this.amtProrate = amtProrate;
  }

  public RecurringPlan dbTimestamp(String dbTimestamp) {
    this.dbTimestamp = dbTimestamp;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Date/time the plan was created.
   * @return dbTimestamp
  **/
  @ApiModelProperty(example = "2016-07-10 09:55:30", value = "<strong>Format: </strong>Variable length AN<br><strong>Description: </strong>Date/time the plan was created.")
  public String getDbTimestamp() {
    return dbTimestamp;
  }

  public void setDbTimestamp(String dbTimestamp) {
    this.dbTimestamp = dbTimestamp;
  }

  public RecurringPlan modTimestamp(String modTimestamp) {
    this.modTimestamp = modTimestamp;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Date/time the plan was last modified.
   * @return modTimestamp
  **/
  @ApiModelProperty(example = "2016-07-19 21:15:39", value = "<strong>Format: </strong>Variable length AN<br><strong>Description: </strong>Date/time the plan was last modified.")
  public String getModTimestamp() {
    return modTimestamp;
  }

  public void setModTimestamp(String modTimestamp) {
    this.modTimestamp = modTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecurringPlan recurringPlan = (RecurringPlan) o;
    return Objects.equals(this.merchantId, recurringPlan.merchantId) &&
        Objects.equals(this.planId, recurringPlan.planId) &&
        Objects.equals(this.planCode, recurringPlan.planCode) &&
        Objects.equals(this.planName, recurringPlan.planName) &&
        Objects.equals(this.planDesc, recurringPlan.planDesc) &&
        Objects.equals(this.planFrequency, recurringPlan.planFrequency) &&
        Objects.equals(this.interval, recurringPlan.interval) &&
        Objects.equals(this.planDuration, recurringPlan.planDuration) &&
        Objects.equals(this.status, recurringPlan.status) &&
        Objects.equals(this.trialDuration, recurringPlan.trialDuration) &&
        Objects.equals(this.amtTrial, recurringPlan.amtTrial) &&
        Objects.equals(this.amtSetup, recurringPlan.amtSetup) &&
        Objects.equals(this.amtTran, recurringPlan.amtTran) &&
        Objects.equals(this.tranCurrency, recurringPlan.tranCurrency) &&
        Objects.equals(this.profileId, recurringPlan.profileId) &&
        Objects.equals(this.billSpecificDay, recurringPlan.billSpecificDay) &&
        Objects.equals(this.dayOfWeek, recurringPlan.dayOfWeek) &&
        Objects.equals(this.dayOfMonth, recurringPlan.dayOfMonth) &&
        Objects.equals(this.month, recurringPlan.month) &&
        Objects.equals(this.prorateFirstPmt, recurringPlan.prorateFirstPmt) &&
        Objects.equals(this.amtProrate, recurringPlan.amtProrate) &&
        Objects.equals(this.dbTimestamp, recurringPlan.dbTimestamp) &&
        Objects.equals(this.modTimestamp, recurringPlan.modTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, planId, planCode, planName, planDesc, planFrequency, interval, planDuration, status, trialDuration, amtTrial, amtSetup, amtTran, tranCurrency, profileId, billSpecificDay, dayOfWeek, dayOfMonth, month, prorateFirstPmt, amtProrate, dbTimestamp, modTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecurringPlan {\n");
    
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    planCode: ").append(toIndentedString(planCode)).append("\n");
    sb.append("    planName: ").append(toIndentedString(planName)).append("\n");
    sb.append("    planDesc: ").append(toIndentedString(planDesc)).append("\n");
    sb.append("    planFrequency: ").append(toIndentedString(planFrequency)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    planDuration: ").append(toIndentedString(planDuration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trialDuration: ").append(toIndentedString(trialDuration)).append("\n");
    sb.append("    amtTrial: ").append(toIndentedString(amtTrial)).append("\n");
    sb.append("    amtSetup: ").append(toIndentedString(amtSetup)).append("\n");
    sb.append("    amtTran: ").append(toIndentedString(amtTran)).append("\n");
    sb.append("    tranCurrency: ").append(toIndentedString(tranCurrency)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    billSpecificDay: ").append(toIndentedString(billSpecificDay)).append("\n");
    sb.append("    dayOfWeek: ").append(toIndentedString(dayOfWeek)).append("\n");
    sb.append("    dayOfMonth: ").append(toIndentedString(dayOfMonth)).append("\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    prorateFirstPmt: ").append(toIndentedString(prorateFirstPmt)).append("\n");
    sb.append("    amtProrate: ").append(toIndentedString(amtProrate)).append("\n");
    sb.append("    dbTimestamp: ").append(toIndentedString(dbTimestamp)).append("\n");
    sb.append("    modTimestamp: ").append(toIndentedString(modTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


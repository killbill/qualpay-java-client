/*
 * Qualpay Platform API
 * This document describes the Qualpay Platform API.
 *
 * OpenAPI spec version: 1.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SettledTransactionReport
 */

public class SettledTransactionReport {
  @SerializedName("rec_id")
  private Long recId = null;

  @SerializedName("merchant_id")
  private Long merchantId = null;

  @SerializedName("batch_date")
  private String batchDate = null;

  @SerializedName("dba_name")
  private String dbaName = null;

  @SerializedName("merch_city_ph")
  private String merchCityPh = null;

  @SerializedName("merch_state")
  private String merchState = null;

  @SerializedName("merch_zip")
  private String merchZip = null;

  @SerializedName("merch_country")
  private String merchCountry = null;

  @SerializedName("batch_number")
  private Long batchNumber = null;

  @SerializedName("batch_id")
  private Long batchId = null;

  @SerializedName("card_number")
  private String cardNumber = null;

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 2 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The card brand of this transaction.
   */
  @JsonAdapter(CardTypeEnum.Adapter.class)
  public enum CardTypeEnum {
    VS("VS"),
    
    MC("MC"),
    
    AM("AM"),
    
    DS("DS"),
    
    JC("JC"),
    
    PP("PP"),
    
    AP("AP");

    private String value;

    CardTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CardTypeEnum fromValue(String text) {
      for (CardTypeEnum b : CardTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CardTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CardTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CardTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CardTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("card_type")
  private CardTypeEnum cardType = null;

  @SerializedName("auth_date")
  private String authDate = null;

  @SerializedName("tran_date")
  private String tranDate = null;

  @SerializedName("settle_date")
  private String settleDate = null;

  @SerializedName("amt_auth")
  private String amtAuth = null;

  @SerializedName("amt_tran")
  private String amtTran = null;

  @SerializedName("tran_currency")
  private String tranCurrency = null;

  @SerializedName("reference_number")
  private String referenceNumber = null;

  @SerializedName("purchase_id")
  private String purchaseId = null;

  @SerializedName("auth_code")
  private String authCode = null;

  @SerializedName("moto_ecomm_ind")
  private String motoEcommInd = null;

  @SerializedName("pos_entry_mode")
  private String posEntryMode = null;

  @SerializedName("amt_funded")
  private String amtFunded = null;

  @SerializedName("funded_currency")
  private String fundedCurrency = null;

  @SerializedName("pg_id")
  private String pgId = null;

  @SerializedName("merch_ref_num")
  private String merchRefNum = null;

  @SerializedName("acq_reference_number")
  private String acqReferenceNumber = null;

  @SerializedName("auth_rrn")
  private String authRrn = null;

  @SerializedName("auth_tran_id")
  private String authTranId = null;

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 18 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Unique ID assigned by Qualpay to this deposit.
   * @return recId
  **/
  @ApiModelProperty(example = "1", value = "<strong>Format: </strong>Variable length, up to 18 N<br><strong>Description: </strong>Unique ID assigned by Qualpay to this deposit.")
  public Long getRecId() {
    return recId;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Unique ID assigned by Qualpay to a Merchant.
   * @return merchantId
  **/
  @ApiModelProperty(example = "212000000001", value = "<strong>Format: </strong>Variable length, up to 16 N<br><strong>Description: </strong>Unique ID assigned by Qualpay to a Merchant.")
  public Long getMerchantId() {
    return merchantId;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10 AN, in YYYY-MM-DD&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The date the batch was settled to Qualpay.
   * @return batchDate
  **/
  @ApiModelProperty(example = "2016-07-01", value = "<strong>Format: </strong>Variable length, up to 10 AN, in YYYY-MM-DD<br><strong>Description: </strong>The date the batch was settled to Qualpay.")
  public String getBatchDate() {
    return batchDate;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 25 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The doing business as name of the merchant.
   * @return dbaName
  **/
  @ApiModelProperty(example = "Qualpay", value = "<strong>Format: </strong>Variable length, up to 25 AN<br><strong>Description: </strong>The doing business as name of the merchant.")
  public String getDbaName() {
    return dbaName;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 13 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Sent to the card issuer; either the merchant&#39;s city, or phone number.
   * @return merchCityPh
  **/
  @ApiModelProperty(example = "555-555-5555", value = "<strong>Format: </strong>Variable length, up to 13 AN<br><strong>Description: </strong>Sent to the card issuer; either the merchant's city, or phone number.")
  public String getMerchCityPh() {
    return merchCityPh;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 3 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Sent to the card issuer; the merchant&#39;s state.
   * @return merchState
  **/
  @ApiModelProperty(example = "CA", value = "<strong>Format: </strong>Variable length, up to 3 AN<br><strong>Description: </strong>Sent to the card issuer; the merchant's state.")
  public String getMerchState() {
    return merchState;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Sent to the card issuer; the merchant&#39;s ZIP code.
   * @return merchZip
  **/
  @ApiModelProperty(example = "55555", value = "<strong>Format: </strong>Variable length, up to 10 AN<br><strong>Description: </strong>Sent to the card issuer; the merchant's ZIP code.")
  public String getMerchZip() {
    return merchZip;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 3 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Sent to the card issuer; the merchant&#39;s country code.
   * @return merchCountry
  **/
  @ApiModelProperty(example = "US", value = "<strong>Format: </strong>Variable length, up to 3 AN<br><strong>Description: </strong>Sent to the card issuer; the merchant's country code.")
  public String getMerchCountry() {
    return merchCountry;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 3 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;A non-unique ID assigned by the merchant&#39;s terminal, POS device, or gateway for this batch, in the range of 1 - 999.
   * @return batchNumber
  **/
  @ApiModelProperty(example = "1", value = "<strong>Format: </strong>Variable length, up to 3 N<br><strong>Description: </strong>A non-unique ID assigned by the merchant's terminal, POS device, or gateway for this batch, in the range of 1 - 999.")
  public Long getBatchNumber() {
    return batchNumber;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Unique ID assigned by Qualpay to this batch.
   * @return batchId
  **/
  @ApiModelProperty(example = "1", value = "<strong>Format: </strong>Variable length, up to 10 N<br><strong>Description: </strong>Unique ID assigned by Qualpay to this batch.")
  public Long getBatchId() {
    return batchId;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The truncated card number of the transaction.
   * @return cardNumber
  **/
  @ApiModelProperty(example = "401288xxxxxx8882", value = "<strong>Format: </strong>Variable length, up to 16 AN<br><strong>Description: </strong>The truncated card number of the transaction.")
  public String getCardNumber() {
    return cardNumber;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 2 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The card brand of this transaction.
   * @return cardType
  **/
  @ApiModelProperty(example = "VS", value = "<strong>Format: </strong>Variable length, up to 2 AN<br><strong>Description: </strong>The card brand of this transaction.")
  public CardTypeEnum getCardType() {
    return cardType;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10 AN, in YYYY-MM-DD&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The date the transaction was authorized by the merchant.
   * @return authDate
  **/
  @ApiModelProperty(example = "2016-07-01", value = "<strong>Format: </strong>Variable length, up to 10 AN, in YYYY-MM-DD<br><strong>Description: </strong>The date the transaction was authorized by the merchant.")
  public String getAuthDate() {
    return authDate;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10 AN, in YYYY-MM-DD&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The date the transaction was captured by the merchant.
   * @return tranDate
  **/
  @ApiModelProperty(example = "2016-07-01", value = "<strong>Format: </strong>Variable length, up to 10 AN, in YYYY-MM-DD<br><strong>Description: </strong>The date the transaction was captured by the merchant.")
  public String getTranDate() {
    return tranDate;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10 AN, in YYYY-MM-DD&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The date Qualpay settled the transaction with the issuer.
   * @return settleDate
  **/
  @ApiModelProperty(example = "2016-07-01", value = "<strong>Format: </strong>Variable length, up to 10 AN, in YYYY-MM-DD<br><strong>Description: </strong>The date Qualpay settled the transaction with the issuer.")
  public String getSettleDate() {
    return settleDate;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12,2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The amount of the original authorization.
   * @return amtAuth
  **/
  @ApiModelProperty(example = "1.00", value = "<strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>The amount of the original authorization.")
  public String getAmtAuth() {
    return amtAuth;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12,2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The amount of the settled transaction.
   * @return amtTran
  **/
  @ApiModelProperty(example = "1.00", value = "<strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>The amount of the settled transaction.")
  public String getAmtTran() {
    return amtTran;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 3 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The ISO 4217 numeric currency code of the dispute.
   * @return tranCurrency
  **/
  @ApiModelProperty(example = "840", value = "<strong>Format: </strong>Fixed length, 3 AN<br><strong>Description: </strong>The ISO 4217 numeric currency code of the dispute.")
  public String getTranCurrency() {
    return tranCurrency;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 23 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The bank reference number of the deposit.
   * @return referenceNumber
  **/
  @ApiModelProperty(example = "123456", value = "<strong>Format: </strong>Variable length, up to 23 AN<br><strong>Description: </strong>The bank reference number of the deposit.")
  public String getReferenceNumber() {
    return referenceNumber;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 25 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;A merchant supplied tracking number, generally an invoice or purchase number. This number may be visible to the cardholder, depending on card issuer.
   * @return purchaseId
  **/
  @ApiModelProperty(example = "1234567890", value = "<strong>Format: </strong>Variable length, up to 25 AN<br><strong>Description: </strong>A merchant supplied tracking number, generally an invoice or purchase number. This number may be visible to the cardholder, depending on card issuer.")
  public String getPurchaseId() {
    return purchaseId;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 6 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The authorization code provided by the card issuer when the card was approved.
   * @return authCode
  **/
  @ApiModelProperty(example = "123456", value = "<strong>Format: </strong>Fixed length, 6 AN<br><strong>Description: </strong>The authorization code provided by the card issuer when the card was approved.")
  public String getAuthCode() {
    return authCode;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 1 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The transaction ECI (e-commerce indicator), an indicatior of how the card was processed.
   * @return motoEcommInd
  **/
  @ApiModelProperty(example = "7", value = "<strong>Format: </strong>Fixed length, 1 AN<br><strong>Description: </strong>The transaction ECI (e-commerce indicator), an indicatior of how the card was processed.")
  public String getMotoEcommInd() {
    return motoEcommInd;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 3 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Indicates the way a card number was entered. For all codes, please see &lt;a href&#x3D;\&quot;/developer/api/reference#pos_entry_mode\&quot; target&#x3D;\&quot;_blank\&quot;&gt;POS Entry Modes&lt;/a&gt;.
   * @return posEntryMode
  **/
  @ApiModelProperty(example = "90", value = "<strong>Format: </strong>Variable length, up to 3 AN<br><strong>Description: </strong>Indicates the way a card number was entered. For all codes, please see <a href=\"/developer/api/reference#pos_entry_mode\" target=\"_blank\">POS Entry Modes</a>.")
  public String getPosEntryMode() {
    return posEntryMode;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12,2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The amount of this transaction funded to the merchant (in the funded currency).
   * @return amtFunded
  **/
  @ApiModelProperty(example = "100.00", value = "<strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>The amount of this transaction funded to the merchant (in the funded currency).")
  public String getAmtFunded() {
    return amtFunded;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 3 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The ISO 4217 numeric currency code of the transaction.
   * @return fundedCurrency
  **/
  @ApiModelProperty(example = "840", value = "<strong>Format: </strong>Fixed length, 3 AN<br><strong>Description: </strong>The ISO 4217 numeric currency code of the transaction.")
  public String getFundedCurrency() {
    return fundedCurrency;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 32 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;32-byte unique identifier generated by the payment gateway, returned in all valid responses. Applicable only to Qualpay Payment Gateway transactions. It provides a reference to the transaction and is required for some post-auth operations (e.g. capture, refund, or void).
   * @return pgId
  **/
  @ApiModelProperty(example = "d24ac6189b0b11e6966ca68d5edbef41", value = "<strong>Format: </strong>Fixed length, 32 AN<br><strong>Description: </strong>32-byte unique identifier generated by the payment gateway, returned in all valid responses. Applicable only to Qualpay Payment Gateway transactions. It provides a reference to the transaction and is required for some post-auth operations (e.g. capture, refund, or void).")
  public String getPgId() {
    return pgId;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 128 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Merchant provided reference value that will be stored with the transaction data and included with transaction data in reports within Qualpay Manager. This value will also be attached to any lifecycle transactions (e.g. retrieval requests and chargebacks) that may occur.
   * @return merchRefNum
  **/
  @ApiModelProperty(example = "ITEM 16126 Purchased 12-15-2016", value = "<strong>Format: </strong>Variable length, up to 128 AN<br><strong>Description: </strong>Merchant provided reference value that will be stored with the transaction data and included with transaction data in reports within Qualpay Manager. This value will also be attached to any lifecycle transactions (e.g. retrieval requests and chargebacks) that may occur.")
  public String getMerchRefNum() {
    return merchRefNum;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 11 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Acquirer reference number is an 11-digit number generated by the product initiating the transaction. It is a unique number that both the acquirer and the issuer can use to identify a transaction. For chargeback adjustments, the acquirer reference number is used as the deposit reference number.
   * @return acqReferenceNumber
  **/
  @ApiModelProperty(example = "8975679", value = "<strong>Format: </strong>Variable length, up to 11 N<br><strong>Description: </strong>Acquirer reference number is an 11-digit number generated by the product initiating the transaction. It is a unique number that both the acquirer and the issuer can use to identify a transaction. For chargeback adjustments, the acquirer reference number is used as the deposit reference number.")
  public String getAcqReferenceNumber() {
    return acqReferenceNumber;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The Authorization Retrieval Reference Number (RRN) is a unique identifier assigned by an acquirer to an authorization.
   * @return authRrn
  **/
  @ApiModelProperty(example = "653417990187", value = "<strong>Format: </strong>Variable length, up to 12 AN<br><strong>Description: </strong>The Authorization Retrieval Reference Number (RRN) is a unique identifier assigned by an acquirer to an authorization.")
  public String getAuthRrn() {
    return authRrn;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 15 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The Authorization transaction identifier is a unique identifier returned by the issuing bank for an electronically authorized transaction.
   * @return authTranId
  **/
  @ApiModelProperty(example = "9902KUUSCJCP5I", value = "<strong>Format: </strong>Variable length, up to 15 AN<br><strong>Description: </strong>The Authorization transaction identifier is a unique identifier returned by the issuing bank for an electronically authorized transaction.")
  public String getAuthTranId() {
    return authTranId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettledTransactionReport settledTransactionReport = (SettledTransactionReport) o;
    return Objects.equals(this.recId, settledTransactionReport.recId) &&
        Objects.equals(this.merchantId, settledTransactionReport.merchantId) &&
        Objects.equals(this.batchDate, settledTransactionReport.batchDate) &&
        Objects.equals(this.dbaName, settledTransactionReport.dbaName) &&
        Objects.equals(this.merchCityPh, settledTransactionReport.merchCityPh) &&
        Objects.equals(this.merchState, settledTransactionReport.merchState) &&
        Objects.equals(this.merchZip, settledTransactionReport.merchZip) &&
        Objects.equals(this.merchCountry, settledTransactionReport.merchCountry) &&
        Objects.equals(this.batchNumber, settledTransactionReport.batchNumber) &&
        Objects.equals(this.batchId, settledTransactionReport.batchId) &&
        Objects.equals(this.cardNumber, settledTransactionReport.cardNumber) &&
        Objects.equals(this.cardType, settledTransactionReport.cardType) &&
        Objects.equals(this.authDate, settledTransactionReport.authDate) &&
        Objects.equals(this.tranDate, settledTransactionReport.tranDate) &&
        Objects.equals(this.settleDate, settledTransactionReport.settleDate) &&
        Objects.equals(this.amtAuth, settledTransactionReport.amtAuth) &&
        Objects.equals(this.amtTran, settledTransactionReport.amtTran) &&
        Objects.equals(this.tranCurrency, settledTransactionReport.tranCurrency) &&
        Objects.equals(this.referenceNumber, settledTransactionReport.referenceNumber) &&
        Objects.equals(this.purchaseId, settledTransactionReport.purchaseId) &&
        Objects.equals(this.authCode, settledTransactionReport.authCode) &&
        Objects.equals(this.motoEcommInd, settledTransactionReport.motoEcommInd) &&
        Objects.equals(this.posEntryMode, settledTransactionReport.posEntryMode) &&
        Objects.equals(this.amtFunded, settledTransactionReport.amtFunded) &&
        Objects.equals(this.fundedCurrency, settledTransactionReport.fundedCurrency) &&
        Objects.equals(this.pgId, settledTransactionReport.pgId) &&
        Objects.equals(this.merchRefNum, settledTransactionReport.merchRefNum) &&
        Objects.equals(this.acqReferenceNumber, settledTransactionReport.acqReferenceNumber) &&
        Objects.equals(this.authRrn, settledTransactionReport.authRrn) &&
        Objects.equals(this.authTranId, settledTransactionReport.authTranId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recId, merchantId, batchDate, dbaName, merchCityPh, merchState, merchZip, merchCountry, batchNumber, batchId, cardNumber, cardType, authDate, tranDate, settleDate, amtAuth, amtTran, tranCurrency, referenceNumber, purchaseId, authCode, motoEcommInd, posEntryMode, amtFunded, fundedCurrency, pgId, merchRefNum, acqReferenceNumber, authRrn, authTranId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettledTransactionReport {\n");
    
    sb.append("    recId: ").append(toIndentedString(recId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    batchDate: ").append(toIndentedString(batchDate)).append("\n");
    sb.append("    dbaName: ").append(toIndentedString(dbaName)).append("\n");
    sb.append("    merchCityPh: ").append(toIndentedString(merchCityPh)).append("\n");
    sb.append("    merchState: ").append(toIndentedString(merchState)).append("\n");
    sb.append("    merchZip: ").append(toIndentedString(merchZip)).append("\n");
    sb.append("    merchCountry: ").append(toIndentedString(merchCountry)).append("\n");
    sb.append("    batchNumber: ").append(toIndentedString(batchNumber)).append("\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    authDate: ").append(toIndentedString(authDate)).append("\n");
    sb.append("    tranDate: ").append(toIndentedString(tranDate)).append("\n");
    sb.append("    settleDate: ").append(toIndentedString(settleDate)).append("\n");
    sb.append("    amtAuth: ").append(toIndentedString(amtAuth)).append("\n");
    sb.append("    amtTran: ").append(toIndentedString(amtTran)).append("\n");
    sb.append("    tranCurrency: ").append(toIndentedString(tranCurrency)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    purchaseId: ").append(toIndentedString(purchaseId)).append("\n");
    sb.append("    authCode: ").append(toIndentedString(authCode)).append("\n");
    sb.append("    motoEcommInd: ").append(toIndentedString(motoEcommInd)).append("\n");
    sb.append("    posEntryMode: ").append(toIndentedString(posEntryMode)).append("\n");
    sb.append("    amtFunded: ").append(toIndentedString(amtFunded)).append("\n");
    sb.append("    fundedCurrency: ").append(toIndentedString(fundedCurrency)).append("\n");
    sb.append("    pgId: ").append(toIndentedString(pgId)).append("\n");
    sb.append("    merchRefNum: ").append(toIndentedString(merchRefNum)).append("\n");
    sb.append("    acqReferenceNumber: ").append(toIndentedString(acqReferenceNumber)).append("\n");
    sb.append("    authRrn: ").append(toIndentedString(authRrn)).append("\n");
    sb.append("    authTranId: ").append(toIndentedString(authTranId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


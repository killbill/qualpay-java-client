/*
 * Qualpay Platform API
 * This document describes the Qualpay Platform API.
 *
 * OpenAPI spec version: 1.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InvoicePaymentRequest
 */

public class InvoicePaymentRequest {
  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The mode of payment. &lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;CARD&lt;/strong&gt; Invoice checkout payment by customer using a card. A card payment cannot be manually added. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;CASH&lt;/strong&gt; Cash payment.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CHECK&lt;/strong&gt; Check Payment.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;OTHER&lt;/strong&gt; Other modes of payment.&lt;/li&gt;&lt;/ul&gt;
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CASH("CASH"),
    
    CHECK("CHECK"),
    
    OTHER("OTHER");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("date_payment")
  private String datePayment = null;

  @SerializedName("amt_paid")
  private Double amtPaid = null;

  @SerializedName("description")
  private String description = null;

  public InvoicePaymentRequest type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;The mode of payment. &lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;CARD&lt;/strong&gt; Invoice checkout payment by customer using a card. A card payment cannot be manually added. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;CASH&lt;/strong&gt; Cash payment.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CHECK&lt;/strong&gt; Check Payment.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;OTHER&lt;/strong&gt; Other modes of payment.&lt;/li&gt;&lt;/ul&gt;
   * @return type
  **/
  @ApiModelProperty(example = "CHECK", required = true, value = "<strong>Format: </strong>Variable length, up to 16 AN<br><strong>Description: </strong>The mode of payment. <br><ul><li><strong>CARD</strong> Invoice checkout payment by customer using a card. A card payment cannot be manually added. </li><li><strong>CASH</strong> Cash payment.</li><li><strong>CHECK</strong> Check Payment.</li><li><strong>OTHER</strong> Other modes of payment.</li></ul>")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public InvoicePaymentRequest datePayment(String datePayment) {
    this.datePayment = datePayment;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10 AN, in YYYY-MM-DD format&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Date the payment was made.
   * @return datePayment
  **/
  @ApiModelProperty(example = "2018-01-01", required = true, value = "<strong>Format: </strong>Variable length, up to 10 AN, in YYYY-MM-DD format<br><strong>Description: </strong>Date the payment was made.")
  public String getDatePayment() {
    return datePayment;
  }

  public void setDatePayment(String datePayment) {
    this.datePayment = datePayment;
  }

  public InvoicePaymentRequest amtPaid(Double amtPaid) {
    this.amtPaid = amtPaid;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 10, 2 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Amount paid. The payment currency should be the same as the invoice currency. 
   * @return amtPaid
  **/
  @ApiModelProperty(example = "10.45", required = true, value = "<strong>Format: </strong>Variable length, up to 10, 2 N<br><strong>Description: </strong>Amount paid. The payment currency should be the same as the invoice currency. ")
  public Double getAmtPaid() {
    return amtPaid;
  }

  public void setAmtPaid(Double amtPaid) {
    this.amtPaid = amtPaid;
  }

  public InvoicePaymentRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;A short description of the payment.
   * @return description
  **/
  @ApiModelProperty(example = "Check #3456", value = "<strong>Format: </strong>Variable length<br><strong>Description: </strong>A short description of the payment.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoicePaymentRequest invoicePaymentRequest = (InvoicePaymentRequest) o;
    return Objects.equals(this.type, invoicePaymentRequest.type) &&
        Objects.equals(this.datePayment, invoicePaymentRequest.datePayment) &&
        Objects.equals(this.amtPaid, invoicePaymentRequest.amtPaid) &&
        Objects.equals(this.description, invoicePaymentRequest.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, datePayment, amtPaid, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoicePaymentRequest {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    datePayment: ").append(toIndentedString(datePayment)).append("\n");
    sb.append("    amtPaid: ").append(toIndentedString(amtPaid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

